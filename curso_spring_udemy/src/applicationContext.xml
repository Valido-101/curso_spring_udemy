<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Define your beans here -->
    <!-- Carga el fichero properties para poder acceder a él -->
    <context:property-placeholder location="classpath:sport.properties"/>
    
    <!-- Este bean es específico para el log, el código es copia-pega -->
    <bean id="myLoggerConfig" class="com.jvalido.springdemo.MyLoggerConfig" init-method="initLogger">
    	<property name="rootLoggerLevel" value="FINE" />
    	<property name="printedLoggerLevel" value="FINE"/>
    </bean>
    
    <!-- dependency bean -->
    <bean id="myFortune"
    	class="com.jvalido.springdemo.HappyFortuneService">
    </bean>
    
    <bean id="myCoach"
    	class="com.jvalido.springdemo.TrackCoach"> 
    	
    	<!-- set up constructor injection -->
    	<!-- esto utiliza el constructor con parámetros y le pasa el parámetro FortuneService -->
    	<constructor-arg ref="myFortune"/>   
    </bean>
    
    <bean id="myCricketCoach"
    	class="com.jvalido.springdemo.CricketCoach">
    	
    	<!-- set up setter injection -->
    	<!-- esto usa el setter de la clase CricketCoach para inyectarle la propiedad que necesita la clase -->
    	<property name="fortuneService" ref="myFortune"/>
    	
    	<!-- Inject literal values -->
    	<property name="emailAddress" value="${sport.email}"/>
    	
    	<property name="team" value="${sport.team}"/>
    	
    </bean>
    
</beans>





